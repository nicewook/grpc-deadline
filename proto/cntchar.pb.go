// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/cntchar.proto

package cntcharpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CntCharReq struct {
	StrInput             string   `protobuf:"bytes,1,opt,name=strInput,proto3" json:"strInput,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CntCharReq) Reset()         { *m = CntCharReq{} }
func (m *CntCharReq) String() string { return proto.CompactTextString(m) }
func (*CntCharReq) ProtoMessage()    {}
func (*CntCharReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b22c63d646e4205, []int{0}
}

func (m *CntCharReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CntCharReq.Unmarshal(m, b)
}
func (m *CntCharReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CntCharReq.Marshal(b, m, deterministic)
}
func (m *CntCharReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CntCharReq.Merge(m, src)
}
func (m *CntCharReq) XXX_Size() int {
	return xxx_messageInfo_CntCharReq.Size(m)
}
func (m *CntCharReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CntCharReq.DiscardUnknown(m)
}

var xxx_messageInfo_CntCharReq proto.InternalMessageInfo

func (m *CntCharReq) GetStrInput() string {
	if m != nil {
		return m.StrInput
	}
	return ""
}

type CntCharRes struct {
	CntResult            string   `protobuf:"bytes,1,opt,name=cntResult,proto3" json:"cntResult,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CntCharRes) Reset()         { *m = CntCharRes{} }
func (m *CntCharRes) String() string { return proto.CompactTextString(m) }
func (*CntCharRes) ProtoMessage()    {}
func (*CntCharRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b22c63d646e4205, []int{1}
}

func (m *CntCharRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CntCharRes.Unmarshal(m, b)
}
func (m *CntCharRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CntCharRes.Marshal(b, m, deterministic)
}
func (m *CntCharRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CntCharRes.Merge(m, src)
}
func (m *CntCharRes) XXX_Size() int {
	return xxx_messageInfo_CntCharRes.Size(m)
}
func (m *CntCharRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CntCharRes.DiscardUnknown(m)
}

var xxx_messageInfo_CntCharRes proto.InternalMessageInfo

func (m *CntCharRes) GetCntResult() string {
	if m != nil {
		return m.CntResult
	}
	return ""
}

func init() {
	proto.RegisterType((*CntCharReq)(nil), "cntchar.cntCharReq")
	proto.RegisterType((*CntCharRes)(nil), "cntchar.cntCharRes")
}

func init() { proto.RegisterFile("proto/cntchar.proto", fileDescriptor_9b22c63d646e4205) }

var fileDescriptor_9b22c63d646e4205 = []byte{
	// 147 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0xce, 0x2b, 0x49, 0xce, 0x48, 0x2c, 0xd2, 0x03, 0xf3, 0x84, 0xd8, 0xa1, 0x5c,
	0x25, 0x0d, 0x2e, 0xae, 0xe4, 0xbc, 0x12, 0xe7, 0x8c, 0xc4, 0xa2, 0xa0, 0xd4, 0x42, 0x21, 0x29,
	0x2e, 0x8e, 0xe2, 0x92, 0x22, 0xcf, 0xbc, 0x82, 0xd2, 0x12, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce,
	0x20, 0x38, 0x5f, 0x49, 0x0b, 0x49, 0x65, 0xb1, 0x90, 0x0c, 0x17, 0x67, 0x72, 0x5e, 0x49, 0x50,
	0x6a, 0x71, 0x69, 0x0e, 0x4c, 0x29, 0x42, 0xc0, 0xc8, 0x9d, 0x8b, 0x0f, 0xaa, 0x36, 0x38, 0xb5,
	0xa8, 0x2c, 0x33, 0x39, 0x55, 0xc8, 0x94, 0x8b, 0x1d, 0x2a, 0x22, 0x24, 0xac, 0x07, 0x73, 0x0b,
	0xc2, 0x66, 0x29, 0x2c, 0x82, 0xc5, 0x4a, 0x0c, 0x4e, 0xdc, 0x51, 0x9c, 0x50, 0xf1, 0x82, 0xa4,
	0x24, 0x36, 0xb0, 0xdb, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc5, 0xc0, 0x09, 0x2c, 0xd2,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CntCharServiceClient is the client API for CntCharService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CntCharServiceClient interface {
	CntChar(ctx context.Context, in *CntCharReq, opts ...grpc.CallOption) (*CntCharRes, error)
}

type cntCharServiceClient struct {
	cc *grpc.ClientConn
}

func NewCntCharServiceClient(cc *grpc.ClientConn) CntCharServiceClient {
	return &cntCharServiceClient{cc}
}

func (c *cntCharServiceClient) CntChar(ctx context.Context, in *CntCharReq, opts ...grpc.CallOption) (*CntCharRes, error) {
	out := new(CntCharRes)
	err := c.cc.Invoke(ctx, "/cntchar.cntCharService/cntChar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CntCharServiceServer is the server API for CntCharService service.
type CntCharServiceServer interface {
	CntChar(context.Context, *CntCharReq) (*CntCharRes, error)
}

// UnimplementedCntCharServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCntCharServiceServer struct {
}

func (*UnimplementedCntCharServiceServer) CntChar(ctx context.Context, req *CntCharReq) (*CntCharRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CntChar not implemented")
}

func RegisterCntCharServiceServer(s *grpc.Server, srv CntCharServiceServer) {
	s.RegisterService(&_CntCharService_serviceDesc, srv)
}

func _CntCharService_CntChar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CntCharReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CntCharServiceServer).CntChar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cntchar.cntCharService/CntChar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CntCharServiceServer).CntChar(ctx, req.(*CntCharReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CntCharService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cntchar.cntCharService",
	HandlerType: (*CntCharServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "cntChar",
			Handler:    _CntCharService_CntChar_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/cntchar.proto",
}
